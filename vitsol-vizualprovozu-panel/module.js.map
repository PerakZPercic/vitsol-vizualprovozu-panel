{"version":3,"file":"module.js","mappings":"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","sources":["webpack://vitsol-vizualprovozu-panel/external amd \"@grafana/ui\"","webpack://vitsol-vizualprovozu-panel/external amd \"@emotion/css\"","webpack://vitsol-vizualprovozu-panel/external amd \"@grafana/runtime\"","webpack://vitsol-vizualprovozu-panel/external amd \"@grafana/data\"","webpack://vitsol-vizualprovozu-panel/external amd \"react\"","webpack://vitsol-vizualprovozu-panel/webpack/bootstrap","webpack://vitsol-vizualprovozu-panel/webpack/runtime/compat get default export","webpack://vitsol-vizualprovozu-panel/webpack/runtime/define property getters","webpack://vitsol-vizualprovozu-panel/webpack/runtime/hasOwnProperty shorthand","webpack://vitsol-vizualprovozu-panel/webpack/runtime/make namespace object","webpack://vitsol-vizualprovozu-panel/./components/SVGVizual.tsx","webpack://vitsol-vizualprovozu-panel/./utils/ColorHelper.ts","webpack://vitsol-vizualprovozu-panel/./utils/CondAttrib.ts","webpack://vitsol-vizualprovozu-panel/./components/VizualPanel.tsx","webpack://vitsol-vizualprovozu-panel/./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__89__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from \"react\";\r\nimport { css, cx } from '@emotion/css';\r\n\r\ntype SVGProps = {\r\n    header: string;\r\n    value: any;\r\n    removeHeader: boolean;\r\n};\r\ntype SVGState = {\r\n    vbWidth: number;\r\n    vbHeight: number;\r\n};\r\n\r\nexport class SVGVizual extends React.Component {\r\n    _header: SVGTextElement | null;\r\n    _value: SVGTextElement | null;\r\n\r\n    props: Readonly<SVGProps>;\r\n    state: Readonly<SVGState> = {\r\n        vbWidth: 0,\r\n        vbHeight: 0\r\n    };\r\n\r\n    constructor(props: SVGProps) {\r\n        super(props);\r\n        this.props = props;\r\n        this._header = null;\r\n        this._value = null;\r\n    }\r\n\r\n    getWidth(): number {\r\n        if (this._value == null)\r\n            return 0;\r\n\r\n        const w1 = this._header == null ? 0 : (this._header.getBBox().width);\r\n        const w2 = this._value.getBBox().width;\r\n\r\n        if (w1 > w2)\r\n            return w1;\r\n        else return w2;\r\n    }\r\n    setWidth(width: number): void {\r\n        this.setState({vbWidth: width});\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this._value == null)\r\n            return;\r\n\r\n        const vbb = this._value.getBBox();\r\n\r\n        let w = vbb.width;\r\n        let h = vbb.height;\r\n        if (this._header != null) {\r\n            const hbb = this._header.getBBox();\r\n            if (hbb.width > w)\r\n                w = hbb.width;\r\n\r\n            h += hbb.height;\r\n        }\r\n\r\n        this.setState({\r\n            vbWidth: w,\r\n            vbHeight: h\r\n        });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const {vbWidth, vbHeight} = this.state;\r\n\r\n        let header: string | React.ReactNode = \"\";\r\n        if (!this.props.removeHeader) {\r\n            header = <text className={cx(css`\r\n                font-weight: normal;\r\n                font-size: 75%;\r\n            `)} fill=\"white\" ref={(t) => {this._header = t;}}>\r\n                {this.props.header}\r\n            </text>\r\n        }\r\n            \r\n        const value = <text className={cx(css`\r\n                font-weight: bold;\r\n            `)} fill=\"white\" ref={(t) => {this._value = t;}}>\r\n                {this.props.value}\r\n            </text>\r\n\r\n        let py = (vbHeight / 4) + 2.25;\r\n        if (this._header != null) {\r\n            const hbb = this._header.getBBox();\r\n            this._header.setAttribute(\"x\", ((vbWidth - hbb.width) / 2).toString());\r\n            if (!this.props.removeHeader) {\r\n                this._header.setAttribute(\"y\", py.toString());\r\n                py += vbHeight / 2;\r\n            }\r\n        }\r\n        if (this._value != null) {\r\n            const vbb = this._value.getBBox();\r\n            this._value.setAttribute(\"x\", ((vbWidth - vbb.width) / 2).toString());\r\n            if (this.props.removeHeader)\r\n                this._value.setAttribute(\"y\", ((vbHeight / 2) + 2.25).toString());\r\n            else this._value.setAttribute(\"y\", py.toString());\r\n        }\r\n\r\n        const vb = `0 0 ${vbWidth} ${Math.max(vbHeight - 3, 0)}`;\r\n        return (<svg className={cx(css`\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            padding-left: 0.5em;\r\n            padding-right: 0.5em;\r\n        `)} xmlns=\"http://www.w3.org/2000/svg\" viewBox={vb}>\r\n            {header}\r\n            {value}\r\n        </svg>);\r\n    }\r\n}\r\n","const NAMES: { [id: string]: string | null } = {\r\n    \"dark-red\": \"#C4162A\",\r\n    \"semi-dark-red\": \"#E02F44\",\r\n    \"red\": \"#F2495C\",\r\n    \"light-red\": \"#FF7383\",\r\n    \"super-light-red\": \"#FFA6B0\",\r\n\r\n    \"dark-orange\": \"#FA6400\",\r\n    \"semi-dark-orange\": \"#FF780A\",\r\n    \"orange\": \"#FF9830\",\r\n    \"light-orange\": \"#FFB357\",\r\n    \"super-light-orange\": \"#FFCB7D\",\r\n\r\n    \"dark-yellow\": \"#E0B400\",\r\n    \"semi-dark-yellow\": \"#F2CC0C\",\r\n    \"yellow\": \"#FADE2A\", \r\n    \"light-yellow\": \"#FFEE52\",\r\n    \"super-light-yellow\": \"#FFF899\",\r\n\r\n    \"dark-green\": \"#37872D\",\r\n    \"semi-dark-green\": \"#56A64B\",\r\n    \"green\": \"#73BF69\",\r\n    \"light-green\": \"#96D98D\",\r\n    \"super-light-green\": \"#C8F2C2\",\r\n\r\n    \"dark-blue\": \"#1F60C4\",\r\n    \"semi-dark-blue\": \"#3274D9\",\r\n    \"blue\": \"#5794F2\",\r\n    \"light-blue\": \"#8AB8FF\",\r\n    \"super-light-blue\": \"#C0D8FF\",\r\n\r\n    \"dark-purple\": \"#8F3BB8\",\r\n    \"semi-dark-purple\": \"#A352CC\",\r\n    \"purple\": \"#B877D9\",\r\n    \"light-purple\": \"#CA95E5\",\r\n    \"super-light-purple\": \"#DEB6F2\"\r\n}\r\n\r\nexport class Color {\r\n    static BLACK = new Color(0, 0, 0);\r\n\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n\r\n    static fromHex(hcol: string): Color | null {\r\n        function hexToNum(s: string): number {\r\n            return parseInt(s, 16);\r\n        }\r\n\r\n        let matches = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hcol);\r\n        if (matches == null)\r\n            return null;\r\n\r\n        return new Color(hexToNum(matches[1]), hexToNum(matches[2]), hexToNum(matches[3]));\r\n    }\r\n\r\n    constructor(r: number, g: number, b: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n    }\r\n\r\n    getRGBA(a = 1) {\r\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${a})`;\r\n    }\r\n}\r\n\r\nexport function ColorHelper(name: string | undefined): Color | null {\r\n    let val: string | undefined = name;\r\n    if (val === undefined)\r\n        return null;\r\n    if (val.startsWith(\"rgb\")) {\r\n        let matches = /^rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)$/.exec(val);\r\n        if (matches != null)\r\n            return new Color(parseInt(matches[1], 10), parseInt(matches[2], 10), parseInt(matches[3], 10));\r\n    }\r\n    if (val[0] !== '#') {\r\n        let c = NAMES[val];\r\n        if (c == null)\r\n            return null;\r\n\r\n        val = c;\r\n    }\r\n\r\n    return Color.fromHex(val);\r\n}\r\n","function ctrrib(f: boolean, key: string, val: any): {[key: string]: string} | {} {\r\n    let res: any = {};\r\n    if (f) \r\n        res[key] = val;\r\n\r\n    return res;\r\n}\r\n\r\nexport default ctrrib;\r\n","/*eslint react-hooks/rules-of-hooks: 0*/\r\nimport React, { useEffect } from 'react';\r\nimport { Field, PanelProps, ScopedVars, ValueMappingResult } from '@grafana/data';\r\nimport { VizualOptions } from 'types';\r\nimport { css, cx } from '@emotion/css';\r\nimport { useStyles2, useTheme2 } from '@grafana/ui';\r\nimport { PanelDataErrorView } from '@grafana/runtime';\r\n\r\nimport { SVGVizual } from './SVGVizual';\r\nimport { Color, ColorHelper } from '../utils/ColorHelper';\r\nimport ctrrib from 'utils/CondAttrib';\r\n\r\ninterface Props extends PanelProps<VizualOptions> {}\r\n\r\ntype TSVGViz = SVGVizual | null;\r\ntype FieldData = {\r\n    name: string,\r\n    display: string,\r\n    color: Color,\r\n    link: string | null,\r\n    value: any\r\n};\r\n\r\nconst getStyles = () => {\r\n    return {\r\n        card: css`\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: space-evenly;\r\n            align-items: center;\r\n        `,\r\n        field: css`\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n\r\n            margin: 0;\r\n            height: 100%;\r\n            color: white;\r\n            text-decoration: none;\r\n            cursor: default;\r\n\r\n            border-radius: 3px;\r\n            background-image: linear-gradient(135deg, rgba(255, 255, 255, 0.4) 5%, rgba(128, 128, 128, 0.1) 50%, rgba(0, 0, 0, 0.3) 110%);\r\n\r\n            &[href]:hover {\r\n                cursor: pointer;\r\n            }\r\n        `\r\n    };\r\n};\r\n\r\nfunction getFieldOverrides(fld: Field): FieldData {\r\n    function setData(fd: FieldData, md: ValueMappingResult) {\r\n        fd.color = ColorHelper(md.color) ?? fd.color;\r\n        fd.value = md.text ?? fd.value;\r\n    }\r\n\r\n    let cfg = fld.config;\r\n    let data: FieldData = {\r\n        name: fld.name,\r\n        display: cfg.displayName ?? \"Unknown\",\r\n        color: cfg.color ? (ColorHelper(cfg.color.fixedColor) ?? Color.BLACK) : Color.BLACK,\r\n        link: null,\r\n        value: fld.values[0]\r\n    };\r\n\r\n    if (cfg.mappings === undefined)\r\n        return data;\r\n    if (cfg.links != null && cfg.links.length > 0)\r\n        data.link = cfg.links[0].url;\r\n\r\n    cfg.mappings.map(m => {\r\n        let mr = m.options.result;\r\n        if (m.type === \"special\") {\r\n            let mv = m.options.match;\r\n            switch (mv) {\r\n                case \"null\":\r\n                    if (data.value === null || data.value === undefined)\r\n                        setData(data, mr);\r\n                    break;\r\n                case \"nan\":\r\n                    if (Number.isNaN(data.value))\r\n                        setData(data, mr);\r\n                    break;\r\n                case \"null+nan\":\r\n                    if (data.value === null || data.value === undefined || Number.isNaN(data.value))\r\n                        setData(data, mr);\r\n                    break;\r\n                case \"true\":\r\n                    if (data.value === true)\r\n                        setData(data, mr);\r\n                    break;\r\n                case \"false\":\r\n                    if (data.value === false)\r\n                        setData(data, mr);\r\n                    break;\r\n                case \"empty\":\r\n                    if (data.value === \"\")\r\n                        setData(data, mr);\r\n                    break;\r\n            }\r\n        }\r\n        if (m.type === \"value\" && data.value === Object.keys(m.options)[0])\r\n            setData(data, m.options[data.value]);\r\n        if (m.type === \"range\" && (typeof(data.value) === \"number\" || /^\\d+$/.test(data.value))) {\r\n            let val = parseFloat(data.value);\r\n            if (m.options.from != null && val < m.options.from)\r\n                return;\r\n            if (m.options.to != null && val > m.options.to)\r\n                return;\r\n\r\n            setData(data, mr);\r\n        }\r\n    });\r\n\r\n    return data;\r\n}\r\nfunction makeFieldVars(flds: FieldData[]): any {\r\n    let res: {[k: string]: any} = {};\r\n    flds.forEach(fld => res[fld.name] = fld.value)\r\n\r\n    return res;\r\n}\r\n\r\nexport const VizualPanel: React.FC<Props> = ({options, data, width, height, fieldConfig, id, replaceVariables}) => {\r\n    const theme = useTheme2();\r\n    const styles = useStyles2(getStyles);\r\n\r\n    if (options.numFields <= 0 || data.series.length === 0 || data.series[0].fields.length < options.numFields)\r\n        return <PanelDataErrorView fieldConfig={fieldConfig} panelId={id} data={data} />;\r\n\r\n    let dataFields: FieldData[] = [];\r\n    for (let i = 0; i < data.series[0].fields.length; i++) \r\n        dataFields[i] = getFieldOverrides(data.series[0].fields[i]);\r\n\r\n    let fields = [];\r\n    let svgs: TSVGViz[] = [];\r\n    let scopedVars: ScopedVars = {\r\n        __data: {\r\n            value: {\r\n                fields: makeFieldVars(dataFields)\r\n            }\r\n        }\r\n    };\r\n    for (let i = 0; i < options.numFields; i++) {\r\n        let df = dataFields[i];\r\n        let link = !df.link ? \"\" : encodeURI(replaceVariables(df.link, scopedVars)).replace(\"%EF%BB%BF\", \"\");\r\n\r\n        fields.push(<a {...ctrrib(df.link != null, \"href\", link)} className={cx(styles.field, css`width: calc((100% / ${options.numFields}) - 0.25em); background-color: ${df.color.getRGBA(options.bgTransparency)};`)}>\r\n            <SVGVizual ref={(t) => {svgs.push(t);}} header={df.display} value={df.value} removeHeader={df.display === \"_\"}/>\r\n        </a>);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Get the largest viewbox\r\n        let w = 0;\r\n        svgs.map(svg => {\r\n            if (svg == null)\r\n                return;\r\n\r\n            let sw = svg.getWidth();\r\n            if (sw > w)\r\n                w = sw;\r\n        });\r\n\r\n        // Set width of each viewbox\r\n        svgs.map(svg => svg?.setWidth(w));\r\n    });\r\n\r\n    let bgImage = \"\";\r\n    if (options.changeSvgColor) \r\n        bgImage = \"background-color: \" + (theme.isLight ? \"rgba(30, 30, 30, 1)\" : \"rgba(255, 255, 255, 1)\") + \";\";\r\n    else {\r\n        bgImage = `\r\n            background-image: url(${options.image});\r\n            background-position: center;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n        `;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={cx(css`\r\n                position: relative;\r\n                left: 0; top: 0;\r\n\r\n                width: ${width}px;\r\n                height: ${height}px;\r\n\r\n                ${bgImage}\r\n                mask-image: url(${options.image});\r\n                mask-mode: alpha;\r\n                mask-position: center;\r\n                mask-size: contain;\r\n                mask-repeat: no-repeat;\r\n            `)} />\r\n            <div className={cx(styles.card, css`\r\n                position: relative;\r\n                left: 0; top: -${height}px;\r\n\r\n                width: ${width}px;\r\n                height: ${height}px;\r\n            `)}>\r\n                {fields}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { PanelPlugin, FieldConfigProperty } from '@grafana/data';\nimport { VizualOptions } from './types';\nimport { VizualPanel } from 'components/VizualPanel';\n\nexport const plugin = new PanelPlugin<VizualOptions>(VizualPanel).useFieldConfig({\n  disableStandardOptions: [\n    FieldConfigProperty.Thresholds,\n    FieldConfigProperty.Filterable,\n    FieldConfigProperty.FieldMinMax,\n    FieldConfigProperty.Min,\n    FieldConfigProperty.Max,\n    FieldConfigProperty.Decimals,\n    FieldConfigProperty.Unit,\n    FieldConfigProperty.Actions,\n    FieldConfigProperty.NoValue\n  ]\n})\n.setPanelOptions(bldr => {\n  return bldr.addNumberInput({\n    path: \"numFields\",\n    name: \"Počet hodnot ve vizuálu\",\n    defaultValue: 2\n  })\n  .addSliderInput({\n    path: \"bgTransparency\",\n    name: \"Průhlednost pozadí karty\",\n    defaultValue: 0.8,\n    settings: {\n      min: 0,\n      max: 1,\n      step: 0.01\n    }\n  })\n  .addTextInput({\n    path: \"image\",\n    name: \"Obrázek k vizuálu\"\n  })\n  .addBooleanSwitch({\n    path: \"changeSvgColor\",\n    name: \"Měnění obrázku podle pozadí\"\n  })\n});\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__89__","__WEBPACK_EXTERNAL_MODULE__531__","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","SVGVizual","React","getWidth","this","_value","w1","_header","getBBox","width","w2","setWidth","setState","vbWidth","componentDidMount","vbb","w","h","height","hbb","vbHeight","render","state","header","props","removeHeader","text","className","cx","css","fill","ref","t","py","setAttribute","toString","vb","Math","max","svg","xmlns","viewBox","constructor","super","NAMES","Color","fromHex","hcol","hexToNum","s","parseInt","matches","exec","getRGBA","g","b","ColorHelper","name","val","startsWith","c","BLACK","f","res","getStyles","card","field","getFieldOverrides","fld","setData","fd","md","color","cfg","config","data","display","displayName","fixedColor","link","values","mappings","links","length","url","map","m","mr","options","result","type","match","Number","isNaN","keys","test","parseFloat","from","to","makeFieldVars","flds","forEach","plugin","PanelPlugin","fieldConfig","id","replaceVariables","theme","useTheme2","styles","useStyles2","numFields","series","fields","PanelDataErrorView","panelId","dataFields","i","svgs","scopedVars","__data","df","encodeURI","replace","push","ctrrib","bgTransparency","useEffect","sw","bgImage","changeSvgColor","isLight","image","div","useFieldConfig","disableStandardOptions","FieldConfigProperty","Thresholds","Filterable","FieldMinMax","Min","Max","Decimals","Unit","Actions","NoValue","setPanelOptions","bldr","addNumberInput","path","defaultValue","addSliderInput","settings","min","step","addTextInput","addBooleanSwitch"],"sourceRoot":""}